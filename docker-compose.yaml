version: "3"
services:
  # ubuntu-base:
  cuda-cudnn-base:
    build: 
      context: .
      target: ubuntu-base
      # target: ubuntu-base
      args:
        - USER_NAME=${USER_NAME}
        - GROUP_NAME=${GROUP_NAME}
        - UID=${UID}
        - GID=${GID}
    image: ubuntu-base:latest
    # image: ubuntu-base:latest
  ros2-base:
    build: 
      context: .
      target: ros2-base
      args:
        - USER_NAME=${USER_NAME}
        - GROUP_NAME=${GROUP_NAME}
        - UID=${UID}
        - GID=${GID}
        - ROS_DOMAIN_ID=${ROS_DOMAIN_ID}
        - ROS_LOCALHOST_ONLY=${ROS_LOCALHOST_ONLY}
    image: ros2-base:latest
  cuda-ros2-base:
    build: 
      context: .
      target: cuda-ros2-base
      args:
        - USER_NAME=${USER_NAME}
        - GROUP_NAME=${GROUP_NAME}
        - UID=${UID}
        - GID=${GID}
        - ROS_DOMAIN_ID=${ROS_DOMAIN_ID}
        - ROS_LOCALHOST_ONLY=${ROS_LOCALHOST_ONLY}
    image: cuda-ros2-base:latest
  cuda-ros2:
    build: 
      context: .
      target: cuda-ros2
      args:
        - USER_NAME=${USER_NAME}
        - GROUP_NAME=${GROUP_NAME}
        - UID=${UID}
        - GID=${GID}
        - ROS_DOMAIN_ID=${ROS_DOMAIN_ID}
        - ROS_LOCALHOST_ONLY=${ROS_LOCALHOST_ONLY}
    image: cuda-ros2:latest
  cuda-ros2-python-base:
    build: 
      context: .
      target: cuda-ros2-python-base
      args:
        - USER_NAME=${USER_NAME}
        - GROUP_NAME=${GROUP_NAME}
        - UID=${UID}
        - GID=${GID}
        - ROS_DOMAIN_ID=${ROS_DOMAIN_ID}
        - ROS_LOCALHOST_ONLY=${ROS_LOCALHOST_ONLY}
    image: cuda-ros2-python-base:latest
  yamamiya-pm:
    container_name: yamamiya-pm
    image: yamamiya-pm
    build:
      context: .
      target: yamamiya-pm
      args:
        - USER_NAME=${USER_NAME}
        - GROUP_NAME=${GROUP_NAME}
        - UID=${UID}
        - GID=${GID}
        - ROS_DOMAIN_ID=${ROS_DOMAIN_ID}
        - ROS_LOCALHOST_ONLY=${ROS_LOCALHOST_ONLY}
        - WORKSPACE_DIR=${WORKSPACE_DIR}
        - ENDPOINT_URL=${ENDPOINT_URL}
    devices:
        - /dev/video0:/dev/video0
    environment:
      - ENDPOINT_URL=${ENDPOINT_URL}
      - DISPLAY=${ENDPOINT_URL}:0
#      - LIBGL_ALWAYS_INDIRECT=""
    volumes:
       - /tmp/.X11-unix:/tmp/.X11-unix
       - $HOME/.Xauthority/:/root/.Xauthority
       - ${WORKSPACE_DIR}:/home/${USER_NAME}/app/
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    tty: true
    user: "${UID}:${GID}"
    ports:
      - "8000:8888"
      - "8001:8001"
  minio:
    image: minio/minio:latest
    container_name: minio
    environment:
      MINIO_ROOT_USER: sigma-chan
      MINIO_ROOT_PASSWORD: sigma-chan-dayo
    entrypoint: bash
    command: -c "/opt/bin/minio server /export --address :9999 --console-address :9001;
      mkdir -p /data/.minio.sys/buckets;
      cp -r /policies/* /data/.minio.sys/;
      /usr/bin/minio server /data"j
    volumes:
      - ./data:/export
      - ./minio/policies:/policies
      - ./minio/config:/root/.minio
    ports:
      - "9000:9999"
      - "9001:9001"